<Window x:Class="Source.MVVM.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Source.Controls"
        xmlns:viewmodel="clr-namespace:Source.MVVM.ViewModel" xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:sys="clr-namespace:System;assembly=netstandard"
        xmlns:auth="clr-namespace:Source.MVVM.View.Auth"
        xmlns:main="clr-namespace:Source.MVVM.View.Main"
        xmlns:authvm="clr-namespace:Source.MVVM.ViewModel.Auth"
        xmlns:mainvm="clr-namespace:Source.MVVM.ViewModel.Main"
        xmlns:windows="clr-namespace:Source.MVVM.ViewModel.Windows" xmlns:fa="http://schemas.fontawesome.io/icons/" xmlns:components="clr-namespace:Source.Components"
        mc:Ignorable="d"
        d:WindowStyle="None"
        Title="sentIn"
        Icon="../../../Images/sentIn.png"
        d:DataContext="{d:DesignInstance Type=windows:MainViewModel}"
        Style="{StaticResource BorderlessWindow}"
        Width="350" MinWidth="350" MaxWidth="800"
        Height="650" MinHeight="650">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Themes/ButtonTheme.xaml"/>
                <ResourceDictionary Source="../../../Themes/ScrollBarTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <!-- Content -->
    <Border x:Name="Content"
            Background="#1c1b1c">

        <Border.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource MainScrollBarTheme}"/>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">7</sys:Double>

        </Border.Resources>

        <Border.OpacityMask>
            <VisualBrush>
                <VisualBrush.Visual>

                    <Border Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=Border}}"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=Border}}"
                            Background="Black"/>

                </VisualBrush.Visual>
            </VisualBrush>
        </Border.OpacityMask>

        <!-- Content Layout -->
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="35"/> <!-- Dock panel -->
                <RowDefinition/> <!-- Content Control -->
            </Grid.RowDefinitions>

            <!-- Dock Panel -->
            <Border x:Name="DockPanel"
                    Grid.Row="0"
                    MouseLeftButtonDown="DockPanelMouseDown"
                    Background="#1c1b1c">

                <Grid>

                    <Button VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Width="35"
                            Height="35"
                            FontSize="17"
                            FontWeight="Bold"
                            Background="#1c1b1c"
                            Foreground="White"
                            Style="{StaticResource CustomMenuButton}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MenuViewModel}" PropertyName="IsVisible" Value="True"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>

                    <!-- Close Button -->
                    <Button x:Name="CloseButton"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            Click="CloseButtonClick"
                            Width="35"
                            Height="35"
                            Content="✕"
                            Background="#1c1b1c"
                            Foreground="White"
                            FontWeight="Bold"
                            FontSize="13"
                            Style="{StaticResource CustomCloseButton}"/>

                </Grid>

            </Border>

            <components:Menu x:Name="Menu"
                             Grid.Row="0" Grid.RowSpan="2"
                             Panel.ZIndex="1"
                             IsVisible="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MenuViewModel.IsVisible, Mode=TwoWay}"
                             DataContext="{Binding MenuViewModel}">
            </components:Menu>

            <components:RoomInitializationModel Grid.Row="1" 
                                                Panel.ZIndex="1" 
                                                IsVisible="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.RoomInitializationViewModel.IsVisible, Mode=TwoWay}"
                                                DataContext="{Binding RoomInitializationViewModel}"/>

            <!-- Content Control -->
            <controls:CustomContentControl Grid.Row="1" Content="{Binding CurrentViewModel}">
                <controls:CustomContentControl.Resources>
                    <DataTemplate DataType="{x:Type authvm:SignInViewModel}">
                        <auth:SignInView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type authvm:SignUpViewModel}">
                        <auth:SignUpView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type mainvm:IntroViewModel}">
                        <main:IntroView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type mainvm:ContentViewModel}">
                        <main:ContentView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type mainvm:RoomViewModel}">
                        <main:RoomView/>
                    </DataTemplate>
                </controls:CustomContentControl.Resources>
            </controls:CustomContentControl>

        </Grid>

    </Border>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
        
</Window>
